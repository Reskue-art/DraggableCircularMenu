/*
| Developed by Reskue
| Filename: SalaryWheel.tsx
| Author: FODEILLA Hasni & Eric Djavid
*/

import React, { Ref } from "react";
import { Chip, Typography, styled } from "@mui/material";
import { Box } from "@mui/system";
import { useDraggable } from "./useDraggable";

/*
|--------------------------------------------------------------------------
| Contracts
|--------------------------------------------------------------------------
*/
interface SalaryWheelProps {
  values: number[];
  colors: string[];
  textColor?: string;
  options?: string[];
}

/*
|--------------------------------------------------------------------------
| Data
|--------------------------------------------------------------------------
*/
const data = [
  "10",
  "11",
  "12",
  "13",
  "14",
  "15",
  "16",
  "17",
  "18",
  "19",
  "20",
  "21",
  "22",
  "23",
  "24",
  "25",
  "26",
  "27",
  "28",
  "29",
  "30",
  "31",
  "32",
  "33",
  "34",
  "35",
  "36",
  "37",
  "38",
  "39",
  "40",
  "42",
  "44",
  "46",
  "48",
  "50",
  "52",
  "54",
  "56",
  "58",
  "60",
  "62",
  "64",
  "66",
  "68",
  "70",
  "72",
  "74",
  "76",
  "78",
  "80",
  "85",
  "90",
  "95",
  "100",
  "105",
  "110",
  "115",
  "120",
  "125",
  "130",
  "135",
  "140",
  "145",
  "150",
  "160",
  "170",
  "180",
  "190",
  "200",
  "210",
  "220",
  "230",
  "240",
  "250",
  "275",
  "300",
  "325",
  "350",
  "375",
  "400",
  "425",
  "450",
  "475",
  "500",
];

const currencies = [
  { label: "GBP (£)", sign: "£" },
  { label: "EUR (€)", sign: "€" },
  { label: "USD ($)", sign: "$" },
];
/*
|--------------------------------------------------------------------------
| Styles
|--------------------------------------------------------------------------
*/
const RadialProgressBar = styled(Box)(() => ({
  background: "#D9D9D9",
  position: "relative",
  borderRadius: "50%",
  overflow: "hidden",
  height: "300px",
  width: "300px",
  zIndex: 1,
  cursor: "normal",
}));
const RPBHalf1 = styled(Box)({
  height: "50%",
  width: "100%",
  transformOrigin: "50% 100%",
  background: "#00FBDF",
  transform: "rotate(90deg)",
});

const RPBHalf2 = styled(Box)({
  position: "absolute",
  top: 0,
  height: "50%",
  width: "100%",
  transformOrigin: "50% 100%",
  background: "rgb(203 213 225)",
});

const Overlay = styled(Box)({
  position: "absolute",
  top: "1rem",
  left: "1rem",
  right: "1rem",
  bottom: "1rem",
  borderRadius: "50%",
  background: "#F9F9F9",
});

const Circle = styled(Box)({
  position: "absolute",
  top: "0.5rem",
  left: "0.5rem",
  right: "0.5rem",
  bottom: "0.5rem",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
});

const BoxDraggable = styled(Box)({
  background: "#00c8b7",
  borderRadius: "50%",
  height: "1rem",
  width: "1rem",
  position: "absolute",
  top: 0,
  left: 0,
  cursor: "grab",
});

const TypographyStyled = styled(Typography)(() => ({
  textAlign: "center",
  fontFamily: "Anton",
  fontSize: "1.25rem",
}));

const ChipStyled = styled(Chip)({
  padding: "0.5rem",
  borderRadius: "1rem",
  fontFamily: "Roboto",
  fontSize: "1rem",
  fontWeight: 400,
});
/*
|--------------------------------------------------------------------------
| Component
|--------------------------------------------------------------------------
*/
const DraggableCircularMenu: React.FC<SalaryWheelProps> = ({
  values,
  colors,
  textColor = 'black',
  options = [],
}) => {
  const [valueProgress, setValueProgress] = React.useState(0.75);
  const [selectedCurrencyIndex, setSelectedCurrencyIndex] = React.useState(0);
  const [draggbleRef, dx, dy, angle] = useDraggable({
    initialAngle: valueProgress,
  });

  // Render
  //--------------------------------------------------------------------------
  return (
    <Box component="div">
      <RadialProgressBar>
        <RPBHalf1 />
        <RPBHalf2
          style={{
            background: (angle as number) > 0.5 ? "#00FB" : "inherit",
            transform: `rotate(${(angle as number) > 0.5
              ? (((angle as number) - 0.25) % 1) * 360
              : (((angle as number) + 0.25) % 1) * 360
              }deg)`,
          }}
        />
        <Overlay />
        <Circle>
          <BoxDraggable
            ref={draggbleRef as Ref<HTMLElement>}
            style={{
              transform: `translate(${dx}px, ${dy}px)`,
              zIndex: 9999,
            }}
          />
          <TypographyStyled variant="subtitle1">
            <span style={{ fontSize: "2.5rem" }}>
              {currencies[selectedCurrencyIndex].sign}
              {data[Math.round((angle as number) * (data.length - 1))]}.00
            </span>
            <br />
            Min. Salary
          </TypographyStyled>
        </Circle>
      </RadialProgressBar>
      <Box
        component="div"
        display="flex"
        justifyContent="center"
        alignItems="center"
        gap={2}
        mt={5}
      >
        {currencies.map((currency, index) => (
          <ChipStyled
            key={index}
            label={currency.label + "lolcat"}
            variant="filled"
            sx={{
              background:
                index === selectedCurrencyIndex ? "#00FBDF" : "#D9D9D9",
            }}
            onClick={() => setSelectedCurrencyIndex(index)}
          />
        ))}
      </Box>
    </Box>
  );
};

export default DraggableCircularMenu;
